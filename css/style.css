/*импортам шрифтов с гугла место в html, это блокирует загрузку*/
/*https://stackoverflow.com/questions/12316501/including-google-fonts-link-or-import*/

/*идею понял, можно лучше через font-awesome или через icomoon, если дизайнер нарисовал свои иконки*/
/**Поняла*/
@font-face {
  font-family: "icons";
  font-display: swap;
  src: url("../fonts/icons.woff?5n0a2r") format("woff"), url("../fonts/icons.woff2?5n0a2r") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

[class^=_icon-]:before,
[class*=" _icon-"]:before {
  display: block;
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: "icons" !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

._icon-envelop:before {
  content: "\e945";
}

._icon-location:before {
  content: "\e947";
}

._icon-github:before {
  content: "\eab0";
}

/*это плохая идея, минимальное кол-во профита от всеобщего сброса по всем тегам,*/
/*лучше использовать normalize.css и далее задавать сбросы уже отдельным элементам*/
/*тоже является антипатерном, но более чем распространённым, тут уже как в проекте повезёт,*/
/*лично у нас это под запретом, потому что имеет такой же мизерный эффект как и сбросы выше*/
/**Поняла, добавила стили отдельно элементам body, h1, h2, ul, dd, dl*/

/*не, это совсем плохо, даже если фокусировка выглядит паршиво,*/
/*она даёт взаимодействие с сайтом, делает его доступнее
здесь врядли можно легко переубедить, но стоит посмотреть на Вадима Макеева
причем можно смотреть что душе угодно, у него всё про доступность и почему это важно
https://www.youtube.com/c/pepelsbey
*/
/**Поняла, посмотрю, просто мне кажется, что лучше задавать не outline, а border потом отдельно каждому элементу для взаимодействия*/

/*это уже устарело, нет необходимости, браузеры уже ок с этим если писать <!doctype html>*/

/*это всё лишнее, разве body можно дать min-height: 100vh*/
/**Если это вопрос, то да, можно, тогда даже если контента будет мало высота body будет равна высоте экрана*/

body {
	color: #112D32;
	font-size: 16px;
	margin: 0;
  font-size: 100%;
  line-height: 1;
  font-family: "Montserrat";
  /*есть плагин такой autoprefixer, он обычно является частью сборки, сейчас это не пишут руками*/
  /**Я пользуюсь сборщиком gulp и autoprefixer у меня там и установлен*/
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

input,
button,
textarea {
  /*чуть-чуть лучше писать font-family: inherit, каскадом возьмётся тот же шрифт что и на body*/
  font-family: inherit;
}

input::-ms-clear {
  display: none;
}

/*так не делают, насколько помню, у кнопок не курсор*/
/**Хорошо, просто мне казалось, что так с ними удобнее работать*/

/*и далее до .wrapper не проверяю, все эти сбросы уже можно взять из normalize.css*/
/**Насколько я понимаю normalize.css это вот этот файл 
https://github.com/necolas/normalize.css/blob/master/normalize.css ?*/

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

a,
a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

ul li {
  list-style: none;
}

img {
  vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
  margin: 0;
}

dl, dd {
	margin: 0;
}

ul {
	padding: 0;
	margin: 0;
}

:root {
	--primary-color: #88BDBC;
}

/*здесь всё лишнее, кроме background и min-height*/
.wrapper {
  min-height: 100%;
  background: -o-linear-gradient(45deg, #112D32, #4F4A41);
  background: linear-gradient(45deg, #112D32, #4F4A41);
}

.container {
  max-width: 1170px;
  margin: 0px auto;
  width: 100%;
  background-color: var(--primary-color);
  padding: 0 15px;
}

.ibg {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  position: relative;
}

/*
  так, пожалуй это стоит отдельно обсудить,
  для webp уже всё это не надо, его можно просто в picture использовать без дополнительных махинаций
  с поддержкой тега img
 */
 /**Тут я просто скрываю картинку из html, так как она устанавливается через background-image в javascript*/
.ibg img {
  width: 0;
  height: 0;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  visibility: hidden;
}

.profile__container {
  padding-top: 15px;
  padding-bottom: 15px;
}

/*это не элемент, а отдельный блок .photo*/
.photo {
  -webkit-box-flex: 0;
      -ms-flex: 0 1 33.333%;
          flex: 0 1 33.333%;
  padding: 0px 0px 30% 0px;
  border-radius: 20px;
}

/*Это всё лишнее судя по раскладке, можно просто написать здесь же margin: auto и остальное удалить, попробуй*/
/**Да, точно*/
.profile__info {
	margin: auto;
	font-size: 30px;
	font-weight: 600;
	text-align: center;
}

.contacts__container {
  background-color: #254E58;
}

/*
  вёрстку всего блока .contacts можно было сделать меньшим кол-вом кода
  по сути это
  .contacts {
    display: flex;
    align-items: center;
    min-height: 100px;
    background-color: #254E58;
  }

  .contacts__item {
    flex: 1 1 auto;
  }

  причем дополнительные теги типа .contacts__items, contacts__container - лишние
 */

 .contacts {
	display: flex;
	align-items: center;
	min-height: 100px;
	background-color: #254E58;
 }

  /*
    можно было сделать иконку внутри ссылки, это было бы логичнее, она была бы кликабельна,
    и не делать дополнительный div.contacts__item, сразу .contacts__link со всеми стилями
    тогда и transition можно было бы дать только ссылке, иконка внутри наследовала бы стили от неё
   */

 .contacts__link {
	padding: 20px;
	flex: 1 1 auto;
	display: flex;
	justify-content: center;
	font-size: 18px;
	 /*стоит вынести в css-variables var(--primary-color)*/
	color: var(--primary-color);
	-webkit-transition: color 0.8s ease 0s;
	-o-transition: color 0.8s ease 0s;
	/*вижу цвет изменяется при hover, делать all лишнее*/
	transition: color 0.8s ease 0s;
 }

.contacts__link::before {
  font-size: 22px;
  /*0px -> можно просто 0, ещё здесь можно просто margin-right: 10px*/
  margin-right: 10px;
}

.information__container {
  padding-top: 30px;
}

.information__education {
  -webkit-box-flex: 0;
      -ms-flex: 0 1 40%;
          flex: 0 1 40%;
  position: relative;
}

.information__goals {
  -webkit-box-flex: 0;
      -ms-flex: 0 1 60%;
          flex: 0 1 60%;
}

/*
  ещё лучше через гриды делать .info-block {display: grid; align-self: start;gap: 30px},
  все дочерние элементы между собой получат этот отступ
  альтернативная запись твоей будет .info-block__item + .info-block__item {margin-top: 30px}, хотя с гридами идея чище, новее
 */
/**Поняла, сделала через grid*/
 
.info-block {display: grid; align-self: start;gap: 30px}

.info-block__title {
  text-transform: uppercase;
  font-size: 20px;
}

.info-block__info {
  /*ого, что-то очень страшное, лучше проще line-height 1.15 бахнуть, не понял этого сатанизма*/
  /** Я просто использую препроцессор sass и задавала формулу line-height: 16 / 14 * 100%;, поэтому получилось такое ужасное число*/
  line-height: 114.2857142857%;
}

.info-block__info dd {
	display: inline;
}

.info-block__info:not(:last-child) {
  margin-bottom: 15px;
}

/*плохое имя класса, описал в html*/
/**Исправила*/
.info-block__heading {
  font-weight: 600;
  display: inline;
  margin: 0px 10px 0px 0px;
}

.info-block__list-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  /* так, тут точно есть какой-то смысл в этом магическом числе (нет?)*/
  line-height: 114.2857142857%;
}

.info-block__list-item:not(:last-child) {
  margin-bottom: 15px;
}

.info-block__list-item::before {
  content: "";
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: #254E58;
  -webkit-box-flex: 0;
      -ms-flex: 0 0 10px;
          flex: 0 0 10px;
  margin: 0px 10px 0px 0px;
}

.info-block__link {
  color: #254E58;
  font-weight: 600;
  -webkit-transition: all 0.8s ease 0s;
  -o-transition: all 0.8s ease 0s;
  transition: all 0.8s ease 0s;
}

@media (min-width: 479.98px) {
  .profile__container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
  }
}

/*а вот .contacts__container выглядит плохо для мелких экранов
и такого бы не произошло если придерживаться mobile first вёрстки
https://ru.stackoverflow.com/questions/651734/%D0%A0%D0%B5%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F-mobile-first
*/
/**Хорошо, буду стараться использовать*/

@media (min-width: 650px) {
  .information__container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding-bottom: 30px;
  }

  .information__education {
    padding-right: 30px;
  }

  .information__education::after {
    content: "";
    height: 100%;
    width: 3px;
    position: absolute;
    top: 0;
    right: 0;
    background-color: #116466;
  }

  .information__goals {
    padding-left: 30px;
  }
}

@media (min-width: 767.98px) {
  .page {
    padding: 50px 0;
  }
}

@media (max-width: 1212px) {
  .container {
    max-width: 970px;
  }
}

/*не, это что-то совсем плохое пошло, я не понимаю что именно решается для малых экранов
сопроводительный комментарий не помешал бы
плюс обрати внимание что у тебя здесь дублирование очень сильное, явно означает что
можно создать отдельный класс и в html навесить так где он нужен
работа по отступам скорее так не должна вестить, это решается комплексно, скажем
для мобилок был один отступ 16px, а для десктопов стал 24px
и если дизайнер что-то другое рандомное нарисовал - оч жаль,
можно смело идти спорить в адекватности применимых величин
*/
/** В scss у меня есть небольшой миксин, который динамически меняет размеры различных отступов и шрифтов
 в зависимости от ширины экрана, чтобы они пропорционально уменьшались, не знала, что так лучше не
 делать, взяла этот способ из туториалов на ютуб 
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidth + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
*/
@media (max-width: 1150px) {
  .contacts__link::before {
    font-size: calc(16px + 2 * ((100vw - 320px) / 830));
  }

  .contacts__link {
    font-size: calc(14px + 2 * ((100vw - 320px) / 830));
	 padding-top: calc(10px + 2 * ((100vw - 320px) / 830));
	 padding-bottom: calc(10px + 2 * ((100vw - 320px) / 830));
  }

  .information__container {
    padding-top: calc(15px + 15 * ((100vw - 320px) / 830));
  }

  .info-block__info:not(:last-child) {
    margin-bottom: calc(10px + 5 * ((100vw - 320px) / 830));
  }

  .info-block__list-item:not(:last-child) {
    margin-bottom: calc(10px + 5 * ((100vw - 320px) / 830));
  }
}

@media (max-width: 992.98px) {
  .container {
    max-width: 750px;
  }

  .contacts {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
}

/*оно точно из этого проекта?*/
/**Да, забыла удалить этот кусок, просто у меня есть небольшой шаблон с частоиспользуемым кодом и я не увидела, что это лишнее*/
@media (max-width: 767.98px) {
  .container {
    max-width: none;
    padding-left: 10px;
    padding-right: 10px;
  }

  .profile__container {
    padding-top: 10px;
    padding-bottom: 10px;
  }
}

@media (max-width: 650px) {
  .information__education {
    padding-bottom: 30px;
  }

  .information__goals {
    padding-bottom: 30px;
  }
}

@media (max-width: 650px) and (max-width: 1150px) {
  .information__education {
    padding-bottom: calc(15px + 15 * ((100vw - 320px) / 830));
  }

  .information__goals {
    padding-bottom: calc(15px + 15 * ((100vw - 320px) / 830));
  }
}

@media (max-width: 479.98px) {
  .profile__photo {
    padding: 0px 0px 80% 0px;
    margin: 0px 0px 20px 0px;
  }

  .profile__info {
    margin: 0px 0px 20px 0px;
  }
}

@media (min-width: 650px) and (max-width: 1150px) {
  .information__container {
    padding-bottom: calc(15px + 15 * ((100vw - 320px) / 830));
  }

  .information__education {
    padding-right: calc(15px + 15 * ((100vw - 320px) / 830));
  }

  .information__goals {
    padding-left: calc(15px + 15 * ((100vw - 320px) / 830));
  }
}

/*интересное решение, имеет место быть, но лучше бы его поближе к самим блокам кода иметь*/
/**Учту, просто у меня gulp все медиа-запросы в конец файла собирает*/
@media (any-hover: hover) {
  .contacts__link:hover {
    color: #fff;
  }

  .info-block__link:hover {
    color: #fff;
  }
}